package sort

//和选择排序的区别：
//选择排序是前边和后边的比较，冒泡排序是通过两两比较，大数往后浮，就像冒泡一样

// 两个for循环，时间复杂度是n^2
func BubbleSort(a []int) []int {
	//获取切片长度
	n := len(a)
	// 外层循环控制排序的轮数，n个元素需要n-1轮
	for i := 0; i < n-1; i++ {
		//这是因为每一轮排序后，最后一个元素都是确定的，不需要再比较，所以每轮的比较次数都会减少一次。
		//内层循环控制每轮比较的次数，每轮比较n-i-1
		//例如，第一轮排序后，最后一个元素是最大的，第二轮排序后，倒数第二个元素是次大的，以此类推。
		//也就是说，只需要比较到倒数第i+1个元素就可以了。
		for j := 0; j < n-i-1; j++ {
			if a[j] > a[j+1] {
				a[j], a[j+1] = a[j+1], a[j]
			}
		}
	}
	return a
}
